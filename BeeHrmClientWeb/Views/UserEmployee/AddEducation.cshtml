@model BeeHRM.ApplicationService.DTOs.EmpEducationDTO
@{
    ViewBag.Title = "AddEducation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section SideBar{
    <div class="wrapper container-fluid" id="wrapper">
        <div id="sidebar-wrapper" class="menusBg menusColor">
            <ul class="sidebar-nav">
                @foreach (var item in ViewBag.SideBar)
                {
                    <li><a href="@item.MduleLink"><i class="@item.ModuleCssClass" aria-hidden="true"></i> @Html.Raw(item.MOduleName)</a></li>
                }
            </ul>
        </div>
    </div>
}
@section PageHeader{
    <div class="small-header">
        <div class="hpanel">
            <div class="panel-body">
                <div id="hbreadcrumb" class="pull-right">
                    <ol class="hbreadcrumb breadcrumb">
                        <li class="active"><span><a href='@Url.Action("Education","UserEmployee")'><i class="fa fa-bars" aria-hidden="true"></i>View</a></span></li>
                    </ol>
                </div>
                <h2 class="font-light m-b-xs">
                    Education
                    <small>Add New</small>
                </h2>
            </div>
        </div>
    </div>
}

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="fa fa-check" aria-hidden="true"></i> @ViewBag.Success
    </div>
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="box box-top-border">
        <div class="box-body">
            <div class="row">
                <div class="col-lg-8 ">
                    <div class="box-body">
                        <div class="well box box-primary">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.EmpCode, htmlAttributes: new { @class = "control-label col-md-12" })
                                        @Html.EditorFor(model => model.EmpCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EmpCode, "", new { @class = "text-danger" })
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmpEduLevelId, "Education Level", htmlAttributes: new { @class = "control-label col-md-12" })
                                @{ IEnumerable<SelectListItem> educationLevel = ViewBag.EducationLevel; }
                                @Html.DropDownListFor(model => model.EmpEduLevelId, educationLevel, "-- Select Level --", new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DegreeName, "Degree Name", htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.DegreeName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DegreeName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FacultyName, "Faculty Name", htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.FacultyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FacultyName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PassedDate, "Passed Date", htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.PassedDateNP, new { htmlAttributes = new { @class = "form-control date", @placeholder = "Enter a Pass Date" } })
                                @Html.ValidationMessageFor(model => model.PassedDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-12" })
                                @{ List<SelectListItem> countryList = ViewBag.Countries;

                                }
                                @Html.DropDownListFor(model => model.CountryId, countryList, "-- Select Country --", new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UniversityName, "University Name", htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.UniversityName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UniversityName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MarkingSystem, "Marking System", htmlAttributes: new { @class = "control-label col-md-12" })
                                @*@Html.EditorFor(model => model.MarkingSystem, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MarkingSystem, "", new { @class = "text-danger" })*@

                                @{ List<SelectListItem> markingSystem = new List<SelectListItem>();
                                    markingSystem.Add(new SelectListItem
                                    {
                                        Text = "Percentage",
                                        Value = "P"
                                    });
                                    markingSystem.Add(new SelectListItem
                                    {
                                        Text = "Grading",
                                        Value = "G"
                                    });
                                }
                                @Html.DropDownListFor(model => model.MarkingSystem, markingSystem, "-- Select Marking System --", new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ObtainedMark, "Obtained Mark", htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.ObtainedMark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ObtainedMark, "", new { @class = "text-danger" })
                            </div>

                            @*<div class="form-group">
                                @Html.LabelFor(model => model.ScanDocument, "Scan Document", htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.TextBoxFor(model => model.File, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ScanDocument, "", new { @class = "text-danger" })
                            </div>*@

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.EducationStatus, htmlAttributes: new { @class = "control-label col-md-12" })
                                        @Html.EditorFor(model => model.EducationStatus, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EducationStatus, "", new { @class = "text-danger" })
                                </div>*@

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="box-footer">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section styles{
    <link href="~/Public/lib/nepali.datepicker.v2.2/nepali.datepicker.v2.2.min.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Public/lib/nepali.datepicker.v2.2/nepali.datepicker.v2.2.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.date').nepaliDatePicker({
                npdMonth: true,
                npdYear: true,
                npdYearCount: 10 // Options | Number of years to show
            });
        });
    </script>

}
