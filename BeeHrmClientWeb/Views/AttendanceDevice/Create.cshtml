@model BeeHRM.ApplicationService.DTOs.AttendanceDeviceDTO

@{
    ViewBag.Title = "AttendanceDevice Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section SideBar{
    <div class="wrapper container-fluid" id="wrapper">
        <div id="sidebar-wrapper" class="menusBg menusColor">
            <ul class="sidebar-nav">
                @foreach (var item in ViewBag.SideBar)
                {
                    <li><a href="@item.MduleLink"><i class="@item.ModuleCssClass" aria-hidden="true"></i> @Html.Raw(item.MOduleName)</a></li>
                }
            </ul>
        </div>
    </div>
}
@section PageHeader{
    <div class="small-header">
        <div class="hpanel">
            <div class="panel-body">
                <div id="hbreadcrumb" class="pull-right">
                    <ol class="hbreadcrumb breadcrumb">
                        <li class="active"><span><a href='@Url.Action("Index","AttendanceDevice")'><i class="fa fa-bars" aria-hidden="true"></i>View</a></span></li>
                    </ol>
                </div>
                <h2 class="font-light m-b-xs">
                    Attendance Device
                    <small>Add New</small>
                </h2>
            </div>
        </div>
    </div>
}

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="fa fa-check" aria-hidden="true"></i> @ViewBag.Success
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="box box-top-border">
        <div class="box-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="box-body">
                        <div class="well box box-primary">


                            <div class="row">
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceName, "Name(*)")
                                        @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the name" } })
                                        @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceIP, "Device IP(*)")
                                        @Html.EditorFor(model => model.DeviceIP, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the DeviceIP " } })
                                        @Html.ValidationMessageFor(model => model.DeviceIP, "", new { @class = "text-danger" })


                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DevicePort, "Device Port(*)")
                                        @Html.EditorFor(model => model.DevicePort, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the DevicePort" } })
                                        @Html.ValidationMessageFor(model => model.DevicePort, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DevicePassword, "Passoword(*)")
                                        @Html.EditorFor(model => model.DevicePassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the password for Rank" } })
                                        @Html.ValidationMessageFor(model => model.DevicePassword, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceMachineNo, "Machine no(*)")
                                        @Html.EditorFor(model => model.DeviceMachineNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the machine number" } })
                                        @Html.ValidationMessageFor(model => model.DeviceMachineNo, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                   
                                    <div class="form-group">
                                        <label>Time picker:</label>

                                        <div class='input-group time'>
                                            <input class="form-control " id="timechkout" placeholder="fetch starttime"   name="DeviceFetchStartTime" type="text">
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>

                                        </div>
                                     
                                    </div>
                                  
                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <label>Time picker:</label>

                                        <div class='input-group time'>
                                            <input class="form-control " id="timechkout" placeholder="fetch end time"  name="DeviceFetchEndTime" type="text">
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>

                                        </div>
                                        <!-- /.input group -->
                                    </div>
                                    
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceLastImportDate, "Last Import Date")
                                       
                                            @Html.EditorFor(model => model.DeviceLastImportDate, new { htmlAttributes = new { @class = "form-control date" } })
                                            @Html.ValidationMessageFor(model => model.DeviceLastImportDate, "", new { @class = "text-danger" })
                                       
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DeviceStatus, "Status")
                                        @Html.EditorFor(model => model.DeviceStatus, new { htmlAttributes = new { @class = "form-control", placeholder = "Status" } })
                                        @Html.ValidationMessageFor(model => model.DeviceStatus, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                            </div>



                            <div class="box-footer">
                                <input type="submit" value="Save" class="btn btn-success" />
                                <a class="btn btn-danger" href="/AttendanceDevice/Index"> Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section styles{
    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-timepicker-1.3.5/jquery.timepicker.min.css" rel="stylesheet" />


}

@section scripts{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Content/jquery-timepicker-1.3.5/jquery.timepicker.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
       
        $(document).ready(function () {
            $('.date').datetimepicker({
                format: 'MM/DD/YYYY',
                ignoreReadonly: true,
                maxDate: 'now'
            });
            $('.time').datetimepicker({
                format: 'HH:mm:ss'
            });
        });
    </script>
}
