@model BeeHRM.ApplicationService.DTOs.EmpEducationDTO

@{
    ViewBag.Title = "EducationCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section SideBar{
    <div class="wrapper container-fluid" id="wrapper">
        <div id="sidebar-wrapper" class="menusBg menusColor">
            <ul class="sidebar-nav">
                @foreach (var item in ViewBag.SideBar)
                {
                    <li><a href="@item.MduleLink"><i class="@item.ModuleCssClass" aria-hidden="true"></i> @Html.Raw(item.MOduleName)</a></li>
                }
            </ul>
        </div>
    </div>
}

@section PageHeader{
    <div class="small-header">
        <div class="hpanel">
            <div class="panel-body">
                <div id="hbreadcrumb" class="pull-right">
                    <ol class="hbreadcrumb breadcrumb">
                        <li class="active"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="/education/@ViewBag.EmployeeDetail.Code" class="btn btn-success"><i class="fa fa-bars"></i> Back</a></span><a href="#"></a></li>
                    </ol>
                </div>
                <h2 class="font-light m-b-xs">
                    Add Education
                </h2>
            </div>
        </div>
    </div>
}

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="fa fa-check" aria-hidden="true"></i> @ViewBag.Success
    </div>
}

<div class="col-md-12 col-lg-12">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="pull-right">
            </div>
            <i class="fa fa-fw fa-thumb-tack"></i> <strong>Information </strong>
        </div>
        <div class="panel-body basic">
            <h3>Educations</h3>


            @using (Html.BeginForm())
            {
               
              
                @Html.AntiForgeryToken()
                
               
                    @Html.ValidationSummary(true)
                    @Html.ValidationMessage("Error", "", new { @class = "text-danger" })
                
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpEduLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{ IEnumerable<SelectListItem> educationLevel = ViewBag.EducationLevel; }
                            @Html.DropDownListFor(model => model.EmpEduLevelId, educationLevel, "-- Select Level --", new { @class = "form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DegreeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DegreeName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Degree Name" } })
                            @Html.ValidationMessageFor(model => model.DegreeName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.FacultyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FacultyName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Faculty Name" } })
                            @Html.ValidationMessageFor(model => model.FacultyName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PassedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PassedDateNP, new { htmlAttributes = new { @class = "form-control date" } })
                            @Html.ValidationMessageFor(model => model.PassedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UniversityName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UniversityName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UniversityName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{ List<SelectListItem> countryList = ViewBag.Countries;

                            }
                            @Html.DropDownListFor(model => model.CountryId, countryList, "-- Select Country --", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MarkingSystem, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{ List<SelectListItem> markingSystem = new List<SelectListItem>();
                                markingSystem.Add(new SelectListItem
                                {
                                    Text = "Percentage",
                                    Value = "P"
                                });
                                markingSystem.Add(new SelectListItem
                                {
                                    Text = "Grading",
                                    Value = "G"
                                });
                            }
                            @Html.DropDownListFor(model => model.MarkingSystem, markingSystem, "-- Select Marking System --", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ObtainedMark, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ObtainedMark, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ObtainedMark, "", new { @class = "text-danger" })
                        </div>
                    </div>
                  @*<div class="form-group">
                            @Html.LabelFor(model => model.ScanDocument, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ScanDocument, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ScanDocument, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="form-group">
                       <div class="control-label col-md-2">
                           <label class="Control-label"> Education Status</label>
                        </div> 
                        <div class="col-md-10">
                            
                            @Html.CheckBox("EducationStatus", true)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
             
                 
        </div>
                                }
</div>
@section styles{
    <link href="~/Public/lib/nepali.datepicker.v2.2/nepali.datepicker.v2.2.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />

}

@section scripts{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Public/lib/nepali.datepicker.v2.2/nepali.datepicker.v2.2.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
            $('.date').nepaliDatePicker({
                npdMonth: true,
                npdYear: true,
                npdYearCount: 10 // Options | Number of years to show
            });
        });
    </script>
}