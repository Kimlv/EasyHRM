@model BeeHRM.ApplicationService.DTOs.RolesAccessDTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section SideBar{
    <div class="wrapper container-fluid" id="wrapper">
        <div id="sidebar-wrapper" class="menusBg menusColor">
            <ul class="sidebar-nav">
                @foreach (var item in ViewBag.SideBar)
                {
                    <li><a href="@item.MduleLink"><i class="@item.ModuleCssClass" aria-hidden="true"></i> @Html.Raw(item.MOduleName)</a></li>
                }
            </ul>
        </div>
    </div>
}
@section PageHeader{
    <div class="small-header">
        <div class="hpanel">
            <div class="panel-body">
                <div id="hbreadcrumb" class="pull-right">
                    <ol class="hbreadcrumb breadcrumb">
                        <li class="active"><span><a href='~/roleaccess/@ViewBag.RoleId'  class="btn btn-success"><i class="fa fa-bars" aria-hidden="true"></i> View</a></span></li>

                    </ol>
                    <input type="hidden" class="roleaccId" value="@ViewBag.RoleId"/>
                </div>
                <h2 class="font-light m-b-xs">
                    Roles for @ViewBag.RoleFor
                    <small>Add New</small>
                </h2>
            </div>
        </div>
    </div>
}

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="fa fa-check" aria-hidden="true"></i> @ViewBag.Success
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="box box-top-border">
        <div class="box-body">
            <div class="row">
                <div class="col-lg-8 ">
                    <div class="box-body">
                        <div class="well box box-primary">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @{
                                List<SelectListItem> listForModules = new List<SelectListItem>();
                                if (ViewBag.Modules  != null)
                                {
                                    foreach (var row in ViewBag.Modules)
                                    {
                                        listForModules.Add(new SelectListItem
                                        {
                                            Text = row.MOduleName,
                                            Value = row.ModuleId.ToString()
                                        });
                                    }
                                }


                            }

                            

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @{
                                List<SelectListItem> parentModules = new List<SelectListItem>();
                                if (ViewBag.ParentModels !=null)
                                {
                                    foreach (var row in ViewBag.ParentModels)
                                    {
                                        parentModules.Add(new SelectListItem
                                        {
                                            Text = row.parentModuleName,
                                            Value = row.ParentModulesId.ToString()
                                        });
                                    }
                                }


                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignModuleId, "Parent Modules(*)")
                                    @Html.DropDownListFor(model => model.AssignModuleParentId, parentModules, "-- Select Parent Modules --", new { @class = "form-control parentModules" })
                                
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignModuleId, "Module(*)")
                                @Html.DropDownListFor(model => model.AssignModuleId, listForModules, "-- Select Pages --", new { @class = "form-control modulePages" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AllowAdd, "Allow Add?:")
                                
                                    @Html.EditorFor(model => model.AllowAdd)
                                    @Html.ValidationMessageFor(model => model.AllowAdd, "", new { @class = "text-danger" })
                                
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AllowEdit, "Allow Edit?:")
                                
                                    @Html.EditorFor(model => model.AllowEdit)
                                    @Html.ValidationMessageFor(model => model.AllowEdit, "", new { @class = "text-danger" })
                                
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AllowDelete, "Allow Delete?:")
                                
                                    @Html.EditorFor(model => model.AllowDelete)
                                    @Html.ValidationMessageFor(model => model.AllowDelete, "", new { @class = "text-danger" })
                                
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AllowView, "Allow View?:")
                                
                                    @Html.EditorFor(model => model.AllowView)
                                    @Html.ValidationMessageFor(model => model.AllowView, "", new { @class = "text-danger" })
                                
                            </div>

                            <div class="box-footer">
                                <input type="submit" value="Save" class="btn btn-success btnsave" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

