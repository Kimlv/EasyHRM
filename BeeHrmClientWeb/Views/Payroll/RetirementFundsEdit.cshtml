@model BeeHRM.ApplicationService.DTOs.PayrollAllowanceMasterDTO

@{
    ViewBag.Title = "RetirementFundsEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section SideBar{
    <div class="wrapper container-fluid" id="wrapper">
        <div id="sidebar-wrapper" class="menusBg menusColor">
            <ul class="sidebar-nav">
                @foreach (var item in ViewBag.SideBar)
                {
                    <li><a href="@item.MduleLink"><i class="@item.ModuleCssClass" aria-hidden="true"></i> @Html.Raw(item.MOduleName)</a></li>
                }
            </ul>
        </div>
    </div>
}
@section PageHeader{
    <div class="small-header">
        <div class="hpanel">
            <div class="panel-body">
                <div id="hbreadcrumb" class="pull-right">
                    <ol class="hbreadcrumb breadcrumb">
                        <li class="active"></li>
                    </ol>
                </div>
                <h2 class="font-light m-b-xs">
                    Retirement Fund
                </h2>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AllowanceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowanceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AllowanceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EarningDeduction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EarningDeduction,Model.EarningDeductionSelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EarningDeduction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PercentageAmount,Model.PercentageAmountSelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PercentageAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ApplyToAllEmployee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ApplyToAllEmployee)
                    @Html.ValidationMessageFor(model => model.ApplyToAllEmployee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SameForAllEmployee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SameForAllEmployee)
                    @Html.ValidationMessageFor(model => model.SameForAllEmployee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAlwaysAplicable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAlwaysAplicable)
                    @Html.ValidationMessageFor(model => model.IsAlwaysAplicable, "", new { @class = "text-danger", @id = "IsAplicable" })
                </div>
            </div>
        </div>
        @{string Hide = ""; if (Model.IsAlwaysAplicable) { Hide = "none"; }} 
        <div style="display:@Hide" id="Toggle">
            <div class="form-group">
                @Html.LabelFor(model => model.ApplicableFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplicableFromDate, new { htmlAttributes = new { @class = "form-control" ,@id = "ApplicableFromdate"} })
                    @Html.ValidationMessageFor(model => model.ApplicableFromDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplicableToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplicableToDate, new { htmlAttributes = new { @class = "form-control", @id = "ApplicableTodate" } })
                    @Html.ValidationMessageFor(model => model.ApplicableToDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            @Html.HiddenFor(model => model.IsTaxable)
            @Html.HiddenFor(model => model.IsDefault)
        `   @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.GivenOnlyIfPresent)
            @Html.HiddenFor(model => model.IsPerDayDeductable)
            @Html.HiddenFor(model => model.AllowanceType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.AllowanceMasterId, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $('#IsAlwaysAplicable').change(function () {
        if ($('#IsAlwaysAplicable').prop('checked')) {
            $('#Toggle').hide();
        } else {
            $('#Toggle').show();
        }

    });
</script>
}
